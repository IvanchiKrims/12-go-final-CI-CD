name: Go CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Запускать деплой по тегам вида v1.0.0, v2.3.4 и т.п.

jobs:
  test:
    name: Test Go Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.0

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run vet
        run: go vet ./...

  deploy:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')  # Только при пуше тегов вида v*

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (для мультиплатформенных сборок)
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}       # Твой DockerHub логин
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}   # DockerHub токен (лучше использовать токен)

      - name: Extract metadata (tags, labels) for Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/ci-cd   # Имя репозитория на DockerHub

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}      # Теги (например, v1.0.0, latest)
          labels: ${{ steps.meta.outputs.labels }}  # Лейблы для образа
